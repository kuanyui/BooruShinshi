//
   Copyright (c) 2021-2022 ono ono (kuanyui)
   All rights reserved.

   This project is released under  Mozilla Public License, v. 2.0 (MPL-2.0). Each
   file under this directory is licensed under MPL-2.0 by default, if the file
   includes no license information.

   If a copy of the MPL was not distributed with this file, You can obtain one at
   https://mozilla.org/MPL/2.0/.

   You may not remove or alter the substance of any license notices (including
   copyright notices, patent notices, disclaimers of warranty, or limitations of
   liability) contained within the Source Code Form of the Covered Software, except
   that You may alter any license notices to the extent required to remedy known
   factual inaccuracies. (Cited from MPL - 2.0, chapter 3.3)

mixin checkbox(id)
  div
    label(for=id)
      input(id=id type='checkbox')
      block

mixin sub_block(id, label)
  .subBlock
    label(for=id)= label
    block

mixin tablerow_checkbox(id)
  tr.row
    td(colspan="100%")
      label(for=id)
        input(id=id type='checkbox')
        block

//-  {1: 'one', 2: 'two', 3: 'three'}
mixin tablerow_select(id, optsObj={})
  tr.row
    td
      label(for=id)
      block
    td
      select(id=id type='checkbox')
        each text, key in optsObj
          option(value=key)= text


mixin line_radio(radioGroupName, value)
  div
    label
      input(type='radio' name=radioGroupName value=value)
      block

doctype html
html
  head
    meta(charset='utf-8')
    meta(name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no")
    link(rel="stylesheet" type="text/css" href="./options_ui_style/options_ui.css")
  style.
    * {
      font-size: 0.75rem;
    }
    #classifyRuleTableContainer {
      display: flex;
      flex-direction: column;
    }
    .ruleTableScrollArea {
      overflow-y: scroll;
      display: block;
      height: 300px;
      border: 1px solid var(--in-content-scrollarea-border-color);
      background-color: var(--in-content-scrollarea-background);
    }
    .actionButtonContainer {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      margin: 8px;
    }
    .spacer {
      width: 8px;
      height: 8px;
    }
    .actionButtonContainer button {
      width: 75px;
    }
    .actionButtonContainer button .emoji {
      display: inline;
      text-shadow: 1px 0px 0px #ffffff, -1px 0px 0px #ffffff, 0px 1px 0px #ffffff, 0px -1px 0px #ffffff;
    }
    .tableContainer {
      height: 400px;
      width: calc(100vw - 100px - 8 * 2px);
      border: 1px solid #888;
    }
    .tableContainer table td {
      height: 30px;
    }
    .alert {
      background-color: var(--alert-info-bg-color);
      color: var(--alert-info-fg-color);
      border: 1px solid var(--alert-info-fg-color);
      border-radius: 4px;
      padding: 5px 20px;
      margin: 8px;
      code {
        background-color: var(--alert-info-bg-color);
        color: var(--alert-info-fg-color);
        border: 1px solid var(--alert-info-fg-color);
        border-radius: 2px;
        padding: 0px 4px;
      }
    }
    .availableFilenameToken {
      margin-right: 2px;
    }
    form :invalid {
      border: 1px solid #770000;
      background: #ffdddd;
      color: #770000;
    }
    .subBlock {
      border-bottom: 1px solid #888;
      padding: 8px 0;
    }
    select {
      min-width: 20px !important;
    }
    tr.highlighted td {
      background-color: var(--blue-50);
      color: #fff;
    }

  form
    div
      h2 UI
      +checkbox('ui_showNotificationWhenStartingToDownload'): span Show notification when starting to download.
      +checkbox('ui_openLinkWithNewTab'): span Always open image links with a new tab. (Recommended for touchscreen)
      +checkbox('ui_buttonForCloseTab'): span An extra button for closing current tab. (Recommended for touchscreen)
      +checkbox('ui_paginationButtons'): span Unified previous / next button in post list page. (Recommended for touchscreen)
      +checkbox('ui_autoCloseTabAfterDownload'): span Auto close tab after clicking download.
      .alert.uiSetting
      h2 UX
      +checkbox('ux_excludeAiGenerated'): span Exclude AI-generated images from search results. (according to tag like #[code ai_generated], not 100% accurate)
      -var id = 'ux_blockedTags'
      +sub_block(id, "Tag block list (Separated by space or newline. The posts containing any of following tags will be hidden.)")
        textarea.monospace(id=id type="text" spellcheck="false" style="height: 8rem")
        button(id="copyBlockedTagsDefaultValue") Copy Default Value to Clipboard
      h2 File Name
      -var id = 'fileName_fileNameMaxCharacterLength'
      +sub_block(id, "Max Filename Character Length"): input(id=id type="number" min="40" max="250" autovalidator)
      -var id = 'fileName_fileNameTemplate'
      +sub_block(id, "Filename Template (not include file extension)")
        textarea.monospace(id=id type="text" minlength="8" maxlength="240" required autovalidator spellcheck="false")
        div.alert
          div: i Available Tokens:
          #availableTokensContainer
          div (Note: When multiple tags are matched in the same file, the tag with most count will be used. (for example, if one image contains multiple characters, the most popular character will be taken as #[code %character%]). If you want to change this behavior, please use #[b Preferred Tags])
      -var id = 'fileName_tagSeparator'
      +tablerow_select(id, {' ': '(Space)', ',': ','}): span Tag Separator
      +checkbox('fileName_overwriteExisted'): span If a file with same filename has existed, overwrite the existed one directly.
      -var id = 'fileName_preferredTags'
      +sub_block(id, "Preferred Tags (Separated by space or newline.)")
        textarea.monospace(id=id type="text" spellcheck="false" style="height: 6rem")
      h2 Folder
      h3 Basic
      -var id = 'folder_downloadFolderName'
      +sub_block(id, "Root Download Folder Name")
        input(id=id type="text" minlength="0" maxlength="240" placeholder="(Optional)" autovalidator)
        .alert
          ul
            li Left empty means download to the default "Download" directory of your OS.
            li You can use relative path like #[code foo/bar], means #[code {OS_DOWNLOAD_DIR}/foo/bar/]. (But due to the security restriction of Firefox, you cannot use #[code ../] )
      h3 Classification
      +checkbox('folder_enableClassify'): span Automatically classify images to different #[b children folders] by their tags.
      #classifyRuleTableContainer
        .actionButtonContainer
          //- type="button" to avoid <form> submitting
          button.actBtn.add(type="button") #[.emoji ‚ûï] Add
          button.actBtn.delete(type="button") #[.emoji ‚ùå] Delete
          .spacer(style="flex-grow: 1;")
          button.actBtn.moveTop(type="button") #[.emoji ‚è´] Top
          .spacer
          button.actBtn.moveUp(type="button") #[.emoji ‚¨ÜÔ∏è] Up
          button.actBtn.moveDown(type="button") #[.emoji ‚¨áÔ∏è] Down
          .spacer
          button.actBtn.moveBottom(type="button") #[.emoji ‚è¨] Bottom
        .ruleTableScrollArea
          table
            thead
              tr
                th Rule Type
                th(style="width: 100%;") Matcher
                th Folder Name
            tbody
              tr
                td: rule-type-select
        .alert #[b Be careful!] The rules are #[b order-sensitive]. The first one will be matched first.
      //- h3 Important Tags
      //- .alert If image contains any of the following tags, the tag will be included in the downloaded filename as possible as it can. (Notice that this is may cause same image downloaded multiple times, if you modify this list too often)

    h2 Import / Export Settings
    button(type="button" id="importCfg") üìÇ Import from JSON (Restore Settings)
    button(type="button" id="exportCfg") üíæ Export as JSON (Backup Settings)
    .alert#migrationTool
      h3 ‚ö†Ô∏è Special Operations When Upgrading from version 0.11.1 -> 0.12.0
      p If you are reading this, this means you've already upgraded BooruShinshi from version #[code 0.11.1] to #[code 0.12.0], which contains some major changes because this #[code 0.12.0] is to solve a potential bug described #[a(href="https://github.com/kuanyui/BooruShinshi/issues/8") here.], But in some scenarios, it's possible to lose the existing settings due to the mechanism of Firefox's extension upgrading. This warning is to prevent you from losing your settings.
      p Please ensure that your settings are all well or something missing after upgrading to #[code 0.12.0] first. Then following the following steps according to your situation:
      .alert
        h4 #[u Condition 1]: Everything is OK in the existing settings
        div If there's nothing missing in your settings after upgrading to #[code 0.12.0], you can ignore this. But still recommended you to:
        ol
          li Backup your settings via #[code üíæ Export as JSON (Backup Settings)]
          li (Optional) Click #[code üóëÔ∏è Clear Old JSON on Mozilla Sync] to remove this warning.
      .alert
        h4 #[u Condition 2]: Some of my settings are broken / missing!
        div If you find your old settings are missing after the upgrading to #[code 0.12.0], please following the following step-by-step to restore your old settings:
        ol
          li Click the #[code ‚õëÔ∏è Export old JSON (Backup old settings)] button below to export your old settings as JSON file.
          li Then use #[code üìÇ Import from JSON (Restore Settings)], choose the backup file you've exported, then click OK. If everything goes well, you should see your old settings are restored.
          li (Optional) If your settings are restored successfully,cClick #[code üóëÔ∏è Clear Old JSON on Mozilla Sync] to remove this warning.
      hr
      button(type="button" id="exportSyncCfg") ‚õëÔ∏è Export Old JSON on Mozilla Sync (Backup old settings)
      button(type="button" id="clearSyncCfg") üóëÔ∏è Clear Old JSON on Mozilla Sync (Optional, to remove this upgrade warning)
    //- h2 Default Values
    // button(id="resetAllBtn") Reset to Defaults
  script(src='./options_ui.js')
